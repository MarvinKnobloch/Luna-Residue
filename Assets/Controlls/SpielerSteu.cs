//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Controlls/SpielerSteu.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @SpielerSteu : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @SpielerSteu()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""SpielerSteu"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""c8d105a7-0a3b-4882-8fd0-2c0465bb4484"",
            ""actions"": [
                {
                    ""name"": ""Mouse"",
                    ""type"": ""PassThrough"",
                    ""id"": ""bdc1915e-b44f-4b58-a054-1cdebaec71f1"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""298c2287-193f-409c-a83a-4ec2c210966a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""6315485d-9686-423b-b30d-56966a79c78e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack1"",
                    ""type"": ""Button"",
                    ""id"": ""30a1c702-6eb4-4ff6-af7e-0568edf0f223"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack2"",
                    ""type"": ""Button"",
                    ""id"": ""f3f5de73-fa68-400f-ad0e-e95b83b51a23"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack3"",
                    ""type"": ""Button"",
                    ""id"": ""c5251375-9569-47b2-93de-53ff77421e61"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack4"",
                    ""type"": ""Button"",
                    ""id"": ""04b51aa0-48fc-45cf-8854-20a1fc1cf6bf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Weaponchange"",
                    ""type"": ""Button"",
                    ""id"": ""337e0346-1f10-461d-a38a-e2357d6e0abb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Charchange"",
                    ""type"": ""Button"",
                    ""id"": ""961a4b95-86fc-43dd-af0d-223f58c17975"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""70d6be89-3bc4-40b7-8ae2-cd71b5831793"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AimLook"",
                    ""type"": ""Value"",
                    ""id"": ""42e234e6-ebbb-4d93-a8b9-4ba65e53a75b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Lockonchange"",
                    ""type"": ""Button"",
                    ""id"": ""0e3bf43a-319b-4d02-9ac4-5ca50ea389ef"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Heal"",
                    ""type"": ""Button"",
                    ""id"": ""87a98b89-c216-478c-ad9b-99a369521f88"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Ability1"",
                    ""type"": ""Button"",
                    ""id"": ""80dcc1b0-a587-400d-acbf-53b8ebc05557"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Ability2"",
                    ""type"": ""Button"",
                    ""id"": ""5c0cd381-c854-4303-9b34-5709e66f3ecf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Ability3"",
                    ""type"": ""Button"",
                    ""id"": ""372483ea-7b7d-4bc2-b9ee-8367373ebb4c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Ability4"",
                    ""type"": ""Button"",
                    ""id"": ""cb67bc9e-a4ff-4a02-bc44-0ecdeeeb71c4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Ability5/6"",
                    ""type"": ""PassThrough"",
                    ""id"": ""67899f18-52ec-4327-b3c0-9fd1d88bbe4a"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Spezial"",
                    ""type"": ""Button"",
                    ""id"": ""30a2dab3-0aca-4996-a384-f15054f2a91e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interaction"",
                    ""type"": ""Button"",
                    ""id"": ""a25529c9-8fa0-45b7-a0bd-ff1a5c21a665"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Map"",
                    ""type"": ""Button"",
                    ""id"": ""1722e75e-32c6-47cc-a1c2-4a520f3831e4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Setalliestarget"",
                    ""type"": ""Button"",
                    ""id"": ""03b1f235-1179-4bc0-9f03-db8477917772"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Character3target"",
                    ""type"": ""Button"",
                    ""id"": ""c05697ba-a1fe-45dc-b719-f0dcb184ce3a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Character4target"",
                    ""type"": ""Button"",
                    ""id"": ""4eb3e4d1-eada-4488-b850-7952513ac173"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""f1fe24d1-f26c-4e46-a2e5-0f6c41a9bcfb"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""b7e96b06-495f-4496-975d-c5d1f4836445"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""d6fed48f-c59d-4651-9715-87585f16136b"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d63c7741-e2b9-4d9b-9281-e7943c1f032c"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a033385d-72df-4a9b-8498-6e9e11ed7bf9"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f390e03b-fd7a-44ae-afc8-ad04469a9fcb"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""8bf29e29-d63b-49e7-abbd-b1978812cc92"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""847381dd-6a5d-4cc9-9086-7bad58f09e2d"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f789edb8-ee29-4334-953f-298f5a032197"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f0718f27-46c5-4abc-84d1-4f568cb5e2d3"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1c7ee5e6-4fb4-4a3b-a206-1d897d469b99"",
                    ""path"": ""<Keyboard>/backquote"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Weaponchange"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8c40f09a-b168-4fce-947c-166624b0d793"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e573cf0a-0983-45b8-a5e9-fe50a948bb07"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AimLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a07ed982-f1d5-4794-a9f3-12bfb370068a"",
                    ""path"": ""<Keyboard>/OEM1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Lockonchange"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4ccaa80b-3796-4abf-901e-3c7f82af4bcf"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Heal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b3342f6f-ffac-4ac8-8fde-a6f082f49383"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ac6f1467-09d9-48ac-9672-e614f6138d4b"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ability1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a8c04a86-9a5b-4d1a-b043-748679c03c71"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ability2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b50dd53e-fcdd-4a65-87f5-21080911bbf5"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ability5/6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0674d59d-fe69-41ac-a140-4a847022ff78"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spezial"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""17622f0e-c7fc-4468-9982-da02812d5bbd"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Charchange"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3128292d-a406-4463-91cb-a3bb8817b7ea"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c8ed27ff-333a-40ad-82f1-5dbd1105e7c7"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ability3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""30965e1a-1bdb-4d53-92e5-218c0d0af8ae"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ability4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""81217e88-ccf8-45b2-89cf-637740eb203d"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Map"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""570dfaf3-1933-4461-ba8e-45851458db7c"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Setalliestarget"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""783775fc-abd9-4b9f-b486-59960ce9184f"",
                    ""path"": ""<Keyboard>/f1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Character3target"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bbec5637-9f83-4bf0-876c-f833a43690f7"",
                    ""path"": ""<Keyboard>/f2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Character4target"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Menusteuerung"",
            ""id"": ""3b9fbd49-745a-47ef-a23c-819e9c09f713"",
            ""actions"": [
                {
                    ""name"": ""Leftclick"",
                    ""type"": ""Button"",
                    ""id"": ""482b2aea-873c-46ac-bd06-cb693f958b47"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rightclick"",
                    ""type"": ""Button"",
                    ""id"": ""c5326dc0-48b2-4247-aa00-53276693ce25"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Loadgame"",
                    ""type"": ""Button"",
                    ""id"": ""a9a704c5-f981-4f86-9a49-ae3b86e95a28"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Menuesc"",
                    ""type"": ""Button"",
                    ""id"": ""f8f8617a-06a1-4db7-a075-f3ff25126b54"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Menucharselectionleft"",
                    ""type"": ""Button"",
                    ""id"": ""22788bf6-1ba7-48bd-a23b-bab3a599619d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Menucharselectionright"",
                    ""type"": ""Button"",
                    ""id"": ""fc89a747-a890-412a-bb94-35a09c9be4a8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Space"",
                    ""type"": ""Button"",
                    ""id"": ""a6f8f556-9189-4f9d-ac3c-8d52efa4ff92"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""F1"",
                    ""type"": ""Button"",
                    ""id"": ""159e2aef-d84f-4901-a672-9d8aa3c4472b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Fps"",
                    ""type"": ""Button"",
                    ""id"": ""5eb870da-7785-45a2-bf99-7fe038904904"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Switchmovespeed"",
                    ""type"": ""Button"",
                    ""id"": ""8b823495-77c6-451e-8e5b-ab4e09824ce1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Unlockfasttravel"",
                    ""type"": ""Button"",
                    ""id"": ""ce534e19-bcb1-4f5a-afde-1092e7fa1329"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""794201ab-def7-4dc7-8aca-72cf72424d0b"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Leftclick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""edc6986f-4b5a-4f45-9e6c-acc2efd9bf39"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rightclick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a7990ce4-e5a2-42c1-9120-4831f322b6bc"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Loadgame"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1dbcafbd-76cf-467a-a0fa-8ac6573c08da"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Menuesc"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""52c94816-cf32-4b8c-b8bf-2d0204e55bd1"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Menucharselectionleft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fba100f3-4bb7-48f2-bae8-12343c3d8e38"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Menucharselectionright"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""71ff4456-d020-4f78-b73e-162fd6541ba9"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Space"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6324baae-d14d-4541-b5d7-08b3c18827a1"",
                    ""path"": ""<Keyboard>/f1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""F1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b0adab15-d90b-42b7-9fb5-c68dfb662366"",
                    ""path"": ""<Keyboard>/f8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fps"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a2c1fef8-69cb-4830-8e98-c76bb462cb0d"",
                    ""path"": ""<Keyboard>/f4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switchmovespeed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""caabb5b9-a8ed-4ad7-bce3-609763072ffb"",
                    ""path"": ""<Keyboard>/f9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Unlockfasttravel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""SpielerHeal"",
            ""id"": ""942fdad8-e8f7-4e73-ab98-3bfe1426bf03"",
            ""actions"": [
                {
                    ""name"": ""Target1"",
                    ""type"": ""Button"",
                    ""id"": ""b693f110-0076-4caf-8b2a-7870773363d8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Target2"",
                    ""type"": ""Button"",
                    ""id"": ""246a5e08-e9f6-48b4-a2c3-7f6d95b273c7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Target3"",
                    ""type"": ""Button"",
                    ""id"": ""e57c61cf-8a10-44b4-8720-00756a3db139"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Groupheal"",
                    ""type"": ""Button"",
                    ""id"": ""4c46b6ad-eed3-4d89-b60e-5fe8097a0d46"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Randomhotkey1"",
                    ""type"": ""Button"",
                    ""id"": ""16560d7d-ca7b-45a7-9c0d-19d1dfd6c3ee"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Randomhotkey2"",
                    ""type"": ""Button"",
                    ""id"": ""77e80e5f-3193-4a0f-a18b-40724922f2f6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Randomhotkey3"",
                    ""type"": ""Button"",
                    ""id"": ""b8244bfa-8cba-4ece-85a6-520c95aaf43b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Randomhotkey4"",
                    ""type"": ""Button"",
                    ""id"": ""c839ca4c-b75f-477f-9aa9-769043774b3d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""ecab7e76-001b-47da-a04f-86c8b0541737"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Target1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""41b960ec-94d6-460f-8a77-d14bff957410"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Target2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a61cd31c-978a-4083-9787-09ed7dc05d6b"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Target3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e64b3aa5-7cdb-4232-83f8-5047133a17c8"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Groupheal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d542fb12-70d6-4701-b8ab-ee4eec81634a"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Randomhotkey1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ad0d8eaa-9b4e-434f-96a8-ee773d59a726"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Randomhotkey2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8cab5121-d420-4c88-9f17-cd4bca649947"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Randomhotkey3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7c24c114-1a51-4c76-ab79-ade7b6aeb052"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Randomhotkey4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Elementalmenu"",
            ""id"": ""c87b8243-49a5-44d9-a7e0-a56a87f25571"",
            ""actions"": [
                {
                    ""name"": ""1"",
                    ""type"": ""Button"",
                    ""id"": ""6780fade-a615-4b98-ac6b-65c89dbc3236"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""2"",
                    ""type"": ""Button"",
                    ""id"": ""fb7a0e0d-c564-40bd-9778-2f98a1fcb4e8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""3"",
                    ""type"": ""Button"",
                    ""id"": ""445a3553-c55c-4699-a67c-dbf083559cf5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""4"",
                    ""type"": ""Button"",
                    ""id"": ""69a116f7-9b0d-4605-b11a-d3626bb2701f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Awakestone"",
                    ""type"": ""Button"",
                    ""id"": ""7f121446-c11d-47ba-9457-c336e0ff4c65"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""32317c53-9f17-49de-b221-706468a5125e"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""69d4b000-53dc-4fa7-abf9-90dabbba365d"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""be25a9d3-9d22-415b-a50b-2b4371a08851"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""524eb0be-fe41-427a-a7d0-a2cdb66bec2a"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bb1fcb89-a8de-439b-8e5a-03912a3478fd"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Awakestone"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Equipmentmenu"",
            ""id"": ""8d4c8c71-6c77-409d-9a9e-f4f73a7937f5"",
            ""actions"": [
                {
                    ""name"": ""Switchcharleft"",
                    ""type"": ""Button"",
                    ""id"": ""26bfac4c-84f3-4b6b-8e1a-77fcf769c56f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Switchcharright"",
                    ""type"": ""Button"",
                    ""id"": ""03f69b9d-8feb-4c2e-b321-a0396469134e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Upgradeitem"",
                    ""type"": ""Button"",
                    ""id"": ""ef5c8de7-dfbb-49e2-b6df-dc422f65eb41"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""fd82132e-8a25-4a22-b73d-7b9d85bb70f1"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switchcharleft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5ea1af3e-4eda-470e-9ec9-5c09bc83779e"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switchcharright"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1d62937a-293a-47bc-b7c2-59604a025d7e"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Upgradeitem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Startmenu"",
            ""id"": ""b3ee00ad-6689-43ed-b505-4fef32d9addf"",
            ""actions"": [
                {
                    ""name"": ""Up"",
                    ""type"": ""Button"",
                    ""id"": ""18afe8c4-b87f-46f0-88a0-bb86c1b1d78e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Down"",
                    ""type"": ""Button"",
                    ""id"": ""ea1dcd68-4274-45bd-afbd-fd94be0ce645"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""3049b929-12ce-448d-9950-6357691c763c"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""45f2dd2c-bfa7-4595-a718-1de44622ec33"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Mouse = m_Player.FindAction("Mouse", throwIfNotFound: true);
        m_Player_Movement = m_Player.FindAction("Movement", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_Attack1 = m_Player.FindAction("Attack1", throwIfNotFound: true);
        m_Player_Attack2 = m_Player.FindAction("Attack2", throwIfNotFound: true);
        m_Player_Attack3 = m_Player.FindAction("Attack3", throwIfNotFound: true);
        m_Player_Attack4 = m_Player.FindAction("Attack4", throwIfNotFound: true);
        m_Player_Weaponchange = m_Player.FindAction("Weaponchange", throwIfNotFound: true);
        m_Player_Charchange = m_Player.FindAction("Charchange", throwIfNotFound: true);
        m_Player_Dash = m_Player.FindAction("Dash", throwIfNotFound: true);
        m_Player_AimLook = m_Player.FindAction("AimLook", throwIfNotFound: true);
        m_Player_Lockonchange = m_Player.FindAction("Lockonchange", throwIfNotFound: true);
        m_Player_Heal = m_Player.FindAction("Heal", throwIfNotFound: true);
        m_Player_Ability1 = m_Player.FindAction("Ability1", throwIfNotFound: true);
        m_Player_Ability2 = m_Player.FindAction("Ability2", throwIfNotFound: true);
        m_Player_Ability3 = m_Player.FindAction("Ability3", throwIfNotFound: true);
        m_Player_Ability4 = m_Player.FindAction("Ability4", throwIfNotFound: true);
        m_Player_Ability56 = m_Player.FindAction("Ability5/6", throwIfNotFound: true);
        m_Player_Spezial = m_Player.FindAction("Spezial", throwIfNotFound: true);
        m_Player_Interaction = m_Player.FindAction("Interaction", throwIfNotFound: true);
        m_Player_Map = m_Player.FindAction("Map", throwIfNotFound: true);
        m_Player_Setalliestarget = m_Player.FindAction("Setalliestarget", throwIfNotFound: true);
        m_Player_Character3target = m_Player.FindAction("Character3target", throwIfNotFound: true);
        m_Player_Character4target = m_Player.FindAction("Character4target", throwIfNotFound: true);
        // Menusteuerung
        m_Menusteuerung = asset.FindActionMap("Menusteuerung", throwIfNotFound: true);
        m_Menusteuerung_Leftclick = m_Menusteuerung.FindAction("Leftclick", throwIfNotFound: true);
        m_Menusteuerung_Rightclick = m_Menusteuerung.FindAction("Rightclick", throwIfNotFound: true);
        m_Menusteuerung_Loadgame = m_Menusteuerung.FindAction("Loadgame", throwIfNotFound: true);
        m_Menusteuerung_Menuesc = m_Menusteuerung.FindAction("Menuesc", throwIfNotFound: true);
        m_Menusteuerung_Menucharselectionleft = m_Menusteuerung.FindAction("Menucharselectionleft", throwIfNotFound: true);
        m_Menusteuerung_Menucharselectionright = m_Menusteuerung.FindAction("Menucharselectionright", throwIfNotFound: true);
        m_Menusteuerung_Space = m_Menusteuerung.FindAction("Space", throwIfNotFound: true);
        m_Menusteuerung_F1 = m_Menusteuerung.FindAction("F1", throwIfNotFound: true);
        m_Menusteuerung_Fps = m_Menusteuerung.FindAction("Fps", throwIfNotFound: true);
        m_Menusteuerung_Switchmovespeed = m_Menusteuerung.FindAction("Switchmovespeed", throwIfNotFound: true);
        m_Menusteuerung_Unlockfasttravel = m_Menusteuerung.FindAction("Unlockfasttravel", throwIfNotFound: true);
        // SpielerHeal
        m_SpielerHeal = asset.FindActionMap("SpielerHeal", throwIfNotFound: true);
        m_SpielerHeal_Target1 = m_SpielerHeal.FindAction("Target1", throwIfNotFound: true);
        m_SpielerHeal_Target2 = m_SpielerHeal.FindAction("Target2", throwIfNotFound: true);
        m_SpielerHeal_Target3 = m_SpielerHeal.FindAction("Target3", throwIfNotFound: true);
        m_SpielerHeal_Groupheal = m_SpielerHeal.FindAction("Groupheal", throwIfNotFound: true);
        m_SpielerHeal_Randomhotkey1 = m_SpielerHeal.FindAction("Randomhotkey1", throwIfNotFound: true);
        m_SpielerHeal_Randomhotkey2 = m_SpielerHeal.FindAction("Randomhotkey2", throwIfNotFound: true);
        m_SpielerHeal_Randomhotkey3 = m_SpielerHeal.FindAction("Randomhotkey3", throwIfNotFound: true);
        m_SpielerHeal_Randomhotkey4 = m_SpielerHeal.FindAction("Randomhotkey4", throwIfNotFound: true);
        // Elementalmenu
        m_Elementalmenu = asset.FindActionMap("Elementalmenu", throwIfNotFound: true);
        m_Elementalmenu__1 = m_Elementalmenu.FindAction("1", throwIfNotFound: true);
        m_Elementalmenu__2 = m_Elementalmenu.FindAction("2", throwIfNotFound: true);
        m_Elementalmenu__3 = m_Elementalmenu.FindAction("3", throwIfNotFound: true);
        m_Elementalmenu__4 = m_Elementalmenu.FindAction("4", throwIfNotFound: true);
        m_Elementalmenu_Awakestone = m_Elementalmenu.FindAction("Awakestone", throwIfNotFound: true);
        // Equipmentmenu
        m_Equipmentmenu = asset.FindActionMap("Equipmentmenu", throwIfNotFound: true);
        m_Equipmentmenu_Switchcharleft = m_Equipmentmenu.FindAction("Switchcharleft", throwIfNotFound: true);
        m_Equipmentmenu_Switchcharright = m_Equipmentmenu.FindAction("Switchcharright", throwIfNotFound: true);
        m_Equipmentmenu_Upgradeitem = m_Equipmentmenu.FindAction("Upgradeitem", throwIfNotFound: true);
        // Startmenu
        m_Startmenu = asset.FindActionMap("Startmenu", throwIfNotFound: true);
        m_Startmenu_Up = m_Startmenu.FindAction("Up", throwIfNotFound: true);
        m_Startmenu_Down = m_Startmenu.FindAction("Down", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_Mouse;
    private readonly InputAction m_Player_Movement;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_Attack1;
    private readonly InputAction m_Player_Attack2;
    private readonly InputAction m_Player_Attack3;
    private readonly InputAction m_Player_Attack4;
    private readonly InputAction m_Player_Weaponchange;
    private readonly InputAction m_Player_Charchange;
    private readonly InputAction m_Player_Dash;
    private readonly InputAction m_Player_AimLook;
    private readonly InputAction m_Player_Lockonchange;
    private readonly InputAction m_Player_Heal;
    private readonly InputAction m_Player_Ability1;
    private readonly InputAction m_Player_Ability2;
    private readonly InputAction m_Player_Ability3;
    private readonly InputAction m_Player_Ability4;
    private readonly InputAction m_Player_Ability56;
    private readonly InputAction m_Player_Spezial;
    private readonly InputAction m_Player_Interaction;
    private readonly InputAction m_Player_Map;
    private readonly InputAction m_Player_Setalliestarget;
    private readonly InputAction m_Player_Character3target;
    private readonly InputAction m_Player_Character4target;
    public struct PlayerActions
    {
        private @SpielerSteu m_Wrapper;
        public PlayerActions(@SpielerSteu wrapper) { m_Wrapper = wrapper; }
        public InputAction @Mouse => m_Wrapper.m_Player_Mouse;
        public InputAction @Movement => m_Wrapper.m_Player_Movement;
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @Attack1 => m_Wrapper.m_Player_Attack1;
        public InputAction @Attack2 => m_Wrapper.m_Player_Attack2;
        public InputAction @Attack3 => m_Wrapper.m_Player_Attack3;
        public InputAction @Attack4 => m_Wrapper.m_Player_Attack4;
        public InputAction @Weaponchange => m_Wrapper.m_Player_Weaponchange;
        public InputAction @Charchange => m_Wrapper.m_Player_Charchange;
        public InputAction @Dash => m_Wrapper.m_Player_Dash;
        public InputAction @AimLook => m_Wrapper.m_Player_AimLook;
        public InputAction @Lockonchange => m_Wrapper.m_Player_Lockonchange;
        public InputAction @Heal => m_Wrapper.m_Player_Heal;
        public InputAction @Ability1 => m_Wrapper.m_Player_Ability1;
        public InputAction @Ability2 => m_Wrapper.m_Player_Ability2;
        public InputAction @Ability3 => m_Wrapper.m_Player_Ability3;
        public InputAction @Ability4 => m_Wrapper.m_Player_Ability4;
        public InputAction @Ability56 => m_Wrapper.m_Player_Ability56;
        public InputAction @Spezial => m_Wrapper.m_Player_Spezial;
        public InputAction @Interaction => m_Wrapper.m_Player_Interaction;
        public InputAction @Map => m_Wrapper.m_Player_Map;
        public InputAction @Setalliestarget => m_Wrapper.m_Player_Setalliestarget;
        public InputAction @Character3target => m_Wrapper.m_Player_Character3target;
        public InputAction @Character4target => m_Wrapper.m_Player_Character4target;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @Mouse.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMouse;
                @Mouse.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMouse;
                @Mouse.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMouse;
                @Movement.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                @Jump.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Attack1.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAttack1;
                @Attack1.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAttack1;
                @Attack1.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAttack1;
                @Attack2.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAttack2;
                @Attack2.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAttack2;
                @Attack2.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAttack2;
                @Attack3.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAttack3;
                @Attack3.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAttack3;
                @Attack3.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAttack3;
                @Attack4.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAttack4;
                @Attack4.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAttack4;
                @Attack4.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAttack4;
                @Weaponchange.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnWeaponchange;
                @Weaponchange.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnWeaponchange;
                @Weaponchange.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnWeaponchange;
                @Charchange.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCharchange;
                @Charchange.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCharchange;
                @Charchange.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCharchange;
                @Dash.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDash;
                @Dash.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDash;
                @Dash.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDash;
                @AimLook.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAimLook;
                @AimLook.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAimLook;
                @AimLook.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAimLook;
                @Lockonchange.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLockonchange;
                @Lockonchange.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLockonchange;
                @Lockonchange.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLockonchange;
                @Heal.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnHeal;
                @Heal.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnHeal;
                @Heal.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnHeal;
                @Ability1.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAbility1;
                @Ability1.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAbility1;
                @Ability1.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAbility1;
                @Ability2.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAbility2;
                @Ability2.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAbility2;
                @Ability2.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAbility2;
                @Ability3.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAbility3;
                @Ability3.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAbility3;
                @Ability3.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAbility3;
                @Ability4.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAbility4;
                @Ability4.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAbility4;
                @Ability4.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAbility4;
                @Ability56.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAbility56;
                @Ability56.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAbility56;
                @Ability56.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAbility56;
                @Spezial.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSpezial;
                @Spezial.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSpezial;
                @Spezial.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSpezial;
                @Interaction.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteraction;
                @Interaction.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteraction;
                @Interaction.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteraction;
                @Map.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMap;
                @Map.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMap;
                @Map.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMap;
                @Setalliestarget.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSetalliestarget;
                @Setalliestarget.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSetalliestarget;
                @Setalliestarget.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSetalliestarget;
                @Character3target.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCharacter3target;
                @Character3target.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCharacter3target;
                @Character3target.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCharacter3target;
                @Character4target.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCharacter4target;
                @Character4target.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCharacter4target;
                @Character4target.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCharacter4target;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Mouse.started += instance.OnMouse;
                @Mouse.performed += instance.OnMouse;
                @Mouse.canceled += instance.OnMouse;
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Attack1.started += instance.OnAttack1;
                @Attack1.performed += instance.OnAttack1;
                @Attack1.canceled += instance.OnAttack1;
                @Attack2.started += instance.OnAttack2;
                @Attack2.performed += instance.OnAttack2;
                @Attack2.canceled += instance.OnAttack2;
                @Attack3.started += instance.OnAttack3;
                @Attack3.performed += instance.OnAttack3;
                @Attack3.canceled += instance.OnAttack3;
                @Attack4.started += instance.OnAttack4;
                @Attack4.performed += instance.OnAttack4;
                @Attack4.canceled += instance.OnAttack4;
                @Weaponchange.started += instance.OnWeaponchange;
                @Weaponchange.performed += instance.OnWeaponchange;
                @Weaponchange.canceled += instance.OnWeaponchange;
                @Charchange.started += instance.OnCharchange;
                @Charchange.performed += instance.OnCharchange;
                @Charchange.canceled += instance.OnCharchange;
                @Dash.started += instance.OnDash;
                @Dash.performed += instance.OnDash;
                @Dash.canceled += instance.OnDash;
                @AimLook.started += instance.OnAimLook;
                @AimLook.performed += instance.OnAimLook;
                @AimLook.canceled += instance.OnAimLook;
                @Lockonchange.started += instance.OnLockonchange;
                @Lockonchange.performed += instance.OnLockonchange;
                @Lockonchange.canceled += instance.OnLockonchange;
                @Heal.started += instance.OnHeal;
                @Heal.performed += instance.OnHeal;
                @Heal.canceled += instance.OnHeal;
                @Ability1.started += instance.OnAbility1;
                @Ability1.performed += instance.OnAbility1;
                @Ability1.canceled += instance.OnAbility1;
                @Ability2.started += instance.OnAbility2;
                @Ability2.performed += instance.OnAbility2;
                @Ability2.canceled += instance.OnAbility2;
                @Ability3.started += instance.OnAbility3;
                @Ability3.performed += instance.OnAbility3;
                @Ability3.canceled += instance.OnAbility3;
                @Ability4.started += instance.OnAbility4;
                @Ability4.performed += instance.OnAbility4;
                @Ability4.canceled += instance.OnAbility4;
                @Ability56.started += instance.OnAbility56;
                @Ability56.performed += instance.OnAbility56;
                @Ability56.canceled += instance.OnAbility56;
                @Spezial.started += instance.OnSpezial;
                @Spezial.performed += instance.OnSpezial;
                @Spezial.canceled += instance.OnSpezial;
                @Interaction.started += instance.OnInteraction;
                @Interaction.performed += instance.OnInteraction;
                @Interaction.canceled += instance.OnInteraction;
                @Map.started += instance.OnMap;
                @Map.performed += instance.OnMap;
                @Map.canceled += instance.OnMap;
                @Setalliestarget.started += instance.OnSetalliestarget;
                @Setalliestarget.performed += instance.OnSetalliestarget;
                @Setalliestarget.canceled += instance.OnSetalliestarget;
                @Character3target.started += instance.OnCharacter3target;
                @Character3target.performed += instance.OnCharacter3target;
                @Character3target.canceled += instance.OnCharacter3target;
                @Character4target.started += instance.OnCharacter4target;
                @Character4target.performed += instance.OnCharacter4target;
                @Character4target.canceled += instance.OnCharacter4target;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // Menusteuerung
    private readonly InputActionMap m_Menusteuerung;
    private IMenusteuerungActions m_MenusteuerungActionsCallbackInterface;
    private readonly InputAction m_Menusteuerung_Leftclick;
    private readonly InputAction m_Menusteuerung_Rightclick;
    private readonly InputAction m_Menusteuerung_Loadgame;
    private readonly InputAction m_Menusteuerung_Menuesc;
    private readonly InputAction m_Menusteuerung_Menucharselectionleft;
    private readonly InputAction m_Menusteuerung_Menucharselectionright;
    private readonly InputAction m_Menusteuerung_Space;
    private readonly InputAction m_Menusteuerung_F1;
    private readonly InputAction m_Menusteuerung_Fps;
    private readonly InputAction m_Menusteuerung_Switchmovespeed;
    private readonly InputAction m_Menusteuerung_Unlockfasttravel;
    public struct MenusteuerungActions
    {
        private @SpielerSteu m_Wrapper;
        public MenusteuerungActions(@SpielerSteu wrapper) { m_Wrapper = wrapper; }
        public InputAction @Leftclick => m_Wrapper.m_Menusteuerung_Leftclick;
        public InputAction @Rightclick => m_Wrapper.m_Menusteuerung_Rightclick;
        public InputAction @Loadgame => m_Wrapper.m_Menusteuerung_Loadgame;
        public InputAction @Menuesc => m_Wrapper.m_Menusteuerung_Menuesc;
        public InputAction @Menucharselectionleft => m_Wrapper.m_Menusteuerung_Menucharselectionleft;
        public InputAction @Menucharselectionright => m_Wrapper.m_Menusteuerung_Menucharselectionright;
        public InputAction @Space => m_Wrapper.m_Menusteuerung_Space;
        public InputAction @F1 => m_Wrapper.m_Menusteuerung_F1;
        public InputAction @Fps => m_Wrapper.m_Menusteuerung_Fps;
        public InputAction @Switchmovespeed => m_Wrapper.m_Menusteuerung_Switchmovespeed;
        public InputAction @Unlockfasttravel => m_Wrapper.m_Menusteuerung_Unlockfasttravel;
        public InputActionMap Get() { return m_Wrapper.m_Menusteuerung; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MenusteuerungActions set) { return set.Get(); }
        public void SetCallbacks(IMenusteuerungActions instance)
        {
            if (m_Wrapper.m_MenusteuerungActionsCallbackInterface != null)
            {
                @Leftclick.started -= m_Wrapper.m_MenusteuerungActionsCallbackInterface.OnLeftclick;
                @Leftclick.performed -= m_Wrapper.m_MenusteuerungActionsCallbackInterface.OnLeftclick;
                @Leftclick.canceled -= m_Wrapper.m_MenusteuerungActionsCallbackInterface.OnLeftclick;
                @Rightclick.started -= m_Wrapper.m_MenusteuerungActionsCallbackInterface.OnRightclick;
                @Rightclick.performed -= m_Wrapper.m_MenusteuerungActionsCallbackInterface.OnRightclick;
                @Rightclick.canceled -= m_Wrapper.m_MenusteuerungActionsCallbackInterface.OnRightclick;
                @Loadgame.started -= m_Wrapper.m_MenusteuerungActionsCallbackInterface.OnLoadgame;
                @Loadgame.performed -= m_Wrapper.m_MenusteuerungActionsCallbackInterface.OnLoadgame;
                @Loadgame.canceled -= m_Wrapper.m_MenusteuerungActionsCallbackInterface.OnLoadgame;
                @Menuesc.started -= m_Wrapper.m_MenusteuerungActionsCallbackInterface.OnMenuesc;
                @Menuesc.performed -= m_Wrapper.m_MenusteuerungActionsCallbackInterface.OnMenuesc;
                @Menuesc.canceled -= m_Wrapper.m_MenusteuerungActionsCallbackInterface.OnMenuesc;
                @Menucharselectionleft.started -= m_Wrapper.m_MenusteuerungActionsCallbackInterface.OnMenucharselectionleft;
                @Menucharselectionleft.performed -= m_Wrapper.m_MenusteuerungActionsCallbackInterface.OnMenucharselectionleft;
                @Menucharselectionleft.canceled -= m_Wrapper.m_MenusteuerungActionsCallbackInterface.OnMenucharselectionleft;
                @Menucharselectionright.started -= m_Wrapper.m_MenusteuerungActionsCallbackInterface.OnMenucharselectionright;
                @Menucharselectionright.performed -= m_Wrapper.m_MenusteuerungActionsCallbackInterface.OnMenucharselectionright;
                @Menucharselectionright.canceled -= m_Wrapper.m_MenusteuerungActionsCallbackInterface.OnMenucharselectionright;
                @Space.started -= m_Wrapper.m_MenusteuerungActionsCallbackInterface.OnSpace;
                @Space.performed -= m_Wrapper.m_MenusteuerungActionsCallbackInterface.OnSpace;
                @Space.canceled -= m_Wrapper.m_MenusteuerungActionsCallbackInterface.OnSpace;
                @F1.started -= m_Wrapper.m_MenusteuerungActionsCallbackInterface.OnF1;
                @F1.performed -= m_Wrapper.m_MenusteuerungActionsCallbackInterface.OnF1;
                @F1.canceled -= m_Wrapper.m_MenusteuerungActionsCallbackInterface.OnF1;
                @Fps.started -= m_Wrapper.m_MenusteuerungActionsCallbackInterface.OnFps;
                @Fps.performed -= m_Wrapper.m_MenusteuerungActionsCallbackInterface.OnFps;
                @Fps.canceled -= m_Wrapper.m_MenusteuerungActionsCallbackInterface.OnFps;
                @Switchmovespeed.started -= m_Wrapper.m_MenusteuerungActionsCallbackInterface.OnSwitchmovespeed;
                @Switchmovespeed.performed -= m_Wrapper.m_MenusteuerungActionsCallbackInterface.OnSwitchmovespeed;
                @Switchmovespeed.canceled -= m_Wrapper.m_MenusteuerungActionsCallbackInterface.OnSwitchmovespeed;
                @Unlockfasttravel.started -= m_Wrapper.m_MenusteuerungActionsCallbackInterface.OnUnlockfasttravel;
                @Unlockfasttravel.performed -= m_Wrapper.m_MenusteuerungActionsCallbackInterface.OnUnlockfasttravel;
                @Unlockfasttravel.canceled -= m_Wrapper.m_MenusteuerungActionsCallbackInterface.OnUnlockfasttravel;
            }
            m_Wrapper.m_MenusteuerungActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Leftclick.started += instance.OnLeftclick;
                @Leftclick.performed += instance.OnLeftclick;
                @Leftclick.canceled += instance.OnLeftclick;
                @Rightclick.started += instance.OnRightclick;
                @Rightclick.performed += instance.OnRightclick;
                @Rightclick.canceled += instance.OnRightclick;
                @Loadgame.started += instance.OnLoadgame;
                @Loadgame.performed += instance.OnLoadgame;
                @Loadgame.canceled += instance.OnLoadgame;
                @Menuesc.started += instance.OnMenuesc;
                @Menuesc.performed += instance.OnMenuesc;
                @Menuesc.canceled += instance.OnMenuesc;
                @Menucharselectionleft.started += instance.OnMenucharselectionleft;
                @Menucharselectionleft.performed += instance.OnMenucharselectionleft;
                @Menucharselectionleft.canceled += instance.OnMenucharselectionleft;
                @Menucharselectionright.started += instance.OnMenucharselectionright;
                @Menucharselectionright.performed += instance.OnMenucharselectionright;
                @Menucharselectionright.canceled += instance.OnMenucharselectionright;
                @Space.started += instance.OnSpace;
                @Space.performed += instance.OnSpace;
                @Space.canceled += instance.OnSpace;
                @F1.started += instance.OnF1;
                @F1.performed += instance.OnF1;
                @F1.canceled += instance.OnF1;
                @Fps.started += instance.OnFps;
                @Fps.performed += instance.OnFps;
                @Fps.canceled += instance.OnFps;
                @Switchmovespeed.started += instance.OnSwitchmovespeed;
                @Switchmovespeed.performed += instance.OnSwitchmovespeed;
                @Switchmovespeed.canceled += instance.OnSwitchmovespeed;
                @Unlockfasttravel.started += instance.OnUnlockfasttravel;
                @Unlockfasttravel.performed += instance.OnUnlockfasttravel;
                @Unlockfasttravel.canceled += instance.OnUnlockfasttravel;
            }
        }
    }
    public MenusteuerungActions @Menusteuerung => new MenusteuerungActions(this);

    // SpielerHeal
    private readonly InputActionMap m_SpielerHeal;
    private ISpielerHealActions m_SpielerHealActionsCallbackInterface;
    private readonly InputAction m_SpielerHeal_Target1;
    private readonly InputAction m_SpielerHeal_Target2;
    private readonly InputAction m_SpielerHeal_Target3;
    private readonly InputAction m_SpielerHeal_Groupheal;
    private readonly InputAction m_SpielerHeal_Randomhotkey1;
    private readonly InputAction m_SpielerHeal_Randomhotkey2;
    private readonly InputAction m_SpielerHeal_Randomhotkey3;
    private readonly InputAction m_SpielerHeal_Randomhotkey4;
    public struct SpielerHealActions
    {
        private @SpielerSteu m_Wrapper;
        public SpielerHealActions(@SpielerSteu wrapper) { m_Wrapper = wrapper; }
        public InputAction @Target1 => m_Wrapper.m_SpielerHeal_Target1;
        public InputAction @Target2 => m_Wrapper.m_SpielerHeal_Target2;
        public InputAction @Target3 => m_Wrapper.m_SpielerHeal_Target3;
        public InputAction @Groupheal => m_Wrapper.m_SpielerHeal_Groupheal;
        public InputAction @Randomhotkey1 => m_Wrapper.m_SpielerHeal_Randomhotkey1;
        public InputAction @Randomhotkey2 => m_Wrapper.m_SpielerHeal_Randomhotkey2;
        public InputAction @Randomhotkey3 => m_Wrapper.m_SpielerHeal_Randomhotkey3;
        public InputAction @Randomhotkey4 => m_Wrapper.m_SpielerHeal_Randomhotkey4;
        public InputActionMap Get() { return m_Wrapper.m_SpielerHeal; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SpielerHealActions set) { return set.Get(); }
        public void SetCallbacks(ISpielerHealActions instance)
        {
            if (m_Wrapper.m_SpielerHealActionsCallbackInterface != null)
            {
                @Target1.started -= m_Wrapper.m_SpielerHealActionsCallbackInterface.OnTarget1;
                @Target1.performed -= m_Wrapper.m_SpielerHealActionsCallbackInterface.OnTarget1;
                @Target1.canceled -= m_Wrapper.m_SpielerHealActionsCallbackInterface.OnTarget1;
                @Target2.started -= m_Wrapper.m_SpielerHealActionsCallbackInterface.OnTarget2;
                @Target2.performed -= m_Wrapper.m_SpielerHealActionsCallbackInterface.OnTarget2;
                @Target2.canceled -= m_Wrapper.m_SpielerHealActionsCallbackInterface.OnTarget2;
                @Target3.started -= m_Wrapper.m_SpielerHealActionsCallbackInterface.OnTarget3;
                @Target3.performed -= m_Wrapper.m_SpielerHealActionsCallbackInterface.OnTarget3;
                @Target3.canceled -= m_Wrapper.m_SpielerHealActionsCallbackInterface.OnTarget3;
                @Groupheal.started -= m_Wrapper.m_SpielerHealActionsCallbackInterface.OnGroupheal;
                @Groupheal.performed -= m_Wrapper.m_SpielerHealActionsCallbackInterface.OnGroupheal;
                @Groupheal.canceled -= m_Wrapper.m_SpielerHealActionsCallbackInterface.OnGroupheal;
                @Randomhotkey1.started -= m_Wrapper.m_SpielerHealActionsCallbackInterface.OnRandomhotkey1;
                @Randomhotkey1.performed -= m_Wrapper.m_SpielerHealActionsCallbackInterface.OnRandomhotkey1;
                @Randomhotkey1.canceled -= m_Wrapper.m_SpielerHealActionsCallbackInterface.OnRandomhotkey1;
                @Randomhotkey2.started -= m_Wrapper.m_SpielerHealActionsCallbackInterface.OnRandomhotkey2;
                @Randomhotkey2.performed -= m_Wrapper.m_SpielerHealActionsCallbackInterface.OnRandomhotkey2;
                @Randomhotkey2.canceled -= m_Wrapper.m_SpielerHealActionsCallbackInterface.OnRandomhotkey2;
                @Randomhotkey3.started -= m_Wrapper.m_SpielerHealActionsCallbackInterface.OnRandomhotkey3;
                @Randomhotkey3.performed -= m_Wrapper.m_SpielerHealActionsCallbackInterface.OnRandomhotkey3;
                @Randomhotkey3.canceled -= m_Wrapper.m_SpielerHealActionsCallbackInterface.OnRandomhotkey3;
                @Randomhotkey4.started -= m_Wrapper.m_SpielerHealActionsCallbackInterface.OnRandomhotkey4;
                @Randomhotkey4.performed -= m_Wrapper.m_SpielerHealActionsCallbackInterface.OnRandomhotkey4;
                @Randomhotkey4.canceled -= m_Wrapper.m_SpielerHealActionsCallbackInterface.OnRandomhotkey4;
            }
            m_Wrapper.m_SpielerHealActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Target1.started += instance.OnTarget1;
                @Target1.performed += instance.OnTarget1;
                @Target1.canceled += instance.OnTarget1;
                @Target2.started += instance.OnTarget2;
                @Target2.performed += instance.OnTarget2;
                @Target2.canceled += instance.OnTarget2;
                @Target3.started += instance.OnTarget3;
                @Target3.performed += instance.OnTarget3;
                @Target3.canceled += instance.OnTarget3;
                @Groupheal.started += instance.OnGroupheal;
                @Groupheal.performed += instance.OnGroupheal;
                @Groupheal.canceled += instance.OnGroupheal;
                @Randomhotkey1.started += instance.OnRandomhotkey1;
                @Randomhotkey1.performed += instance.OnRandomhotkey1;
                @Randomhotkey1.canceled += instance.OnRandomhotkey1;
                @Randomhotkey2.started += instance.OnRandomhotkey2;
                @Randomhotkey2.performed += instance.OnRandomhotkey2;
                @Randomhotkey2.canceled += instance.OnRandomhotkey2;
                @Randomhotkey3.started += instance.OnRandomhotkey3;
                @Randomhotkey3.performed += instance.OnRandomhotkey3;
                @Randomhotkey3.canceled += instance.OnRandomhotkey3;
                @Randomhotkey4.started += instance.OnRandomhotkey4;
                @Randomhotkey4.performed += instance.OnRandomhotkey4;
                @Randomhotkey4.canceled += instance.OnRandomhotkey4;
            }
        }
    }
    public SpielerHealActions @SpielerHeal => new SpielerHealActions(this);

    // Elementalmenu
    private readonly InputActionMap m_Elementalmenu;
    private IElementalmenuActions m_ElementalmenuActionsCallbackInterface;
    private readonly InputAction m_Elementalmenu__1;
    private readonly InputAction m_Elementalmenu__2;
    private readonly InputAction m_Elementalmenu__3;
    private readonly InputAction m_Elementalmenu__4;
    private readonly InputAction m_Elementalmenu_Awakestone;
    public struct ElementalmenuActions
    {
        private @SpielerSteu m_Wrapper;
        public ElementalmenuActions(@SpielerSteu wrapper) { m_Wrapper = wrapper; }
        public InputAction @_1 => m_Wrapper.m_Elementalmenu__1;
        public InputAction @_2 => m_Wrapper.m_Elementalmenu__2;
        public InputAction @_3 => m_Wrapper.m_Elementalmenu__3;
        public InputAction @_4 => m_Wrapper.m_Elementalmenu__4;
        public InputAction @Awakestone => m_Wrapper.m_Elementalmenu_Awakestone;
        public InputActionMap Get() { return m_Wrapper.m_Elementalmenu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ElementalmenuActions set) { return set.Get(); }
        public void SetCallbacks(IElementalmenuActions instance)
        {
            if (m_Wrapper.m_ElementalmenuActionsCallbackInterface != null)
            {
                @_1.started -= m_Wrapper.m_ElementalmenuActionsCallbackInterface.On_1;
                @_1.performed -= m_Wrapper.m_ElementalmenuActionsCallbackInterface.On_1;
                @_1.canceled -= m_Wrapper.m_ElementalmenuActionsCallbackInterface.On_1;
                @_2.started -= m_Wrapper.m_ElementalmenuActionsCallbackInterface.On_2;
                @_2.performed -= m_Wrapper.m_ElementalmenuActionsCallbackInterface.On_2;
                @_2.canceled -= m_Wrapper.m_ElementalmenuActionsCallbackInterface.On_2;
                @_3.started -= m_Wrapper.m_ElementalmenuActionsCallbackInterface.On_3;
                @_3.performed -= m_Wrapper.m_ElementalmenuActionsCallbackInterface.On_3;
                @_3.canceled -= m_Wrapper.m_ElementalmenuActionsCallbackInterface.On_3;
                @_4.started -= m_Wrapper.m_ElementalmenuActionsCallbackInterface.On_4;
                @_4.performed -= m_Wrapper.m_ElementalmenuActionsCallbackInterface.On_4;
                @_4.canceled -= m_Wrapper.m_ElementalmenuActionsCallbackInterface.On_4;
                @Awakestone.started -= m_Wrapper.m_ElementalmenuActionsCallbackInterface.OnAwakestone;
                @Awakestone.performed -= m_Wrapper.m_ElementalmenuActionsCallbackInterface.OnAwakestone;
                @Awakestone.canceled -= m_Wrapper.m_ElementalmenuActionsCallbackInterface.OnAwakestone;
            }
            m_Wrapper.m_ElementalmenuActionsCallbackInterface = instance;
            if (instance != null)
            {
                @_1.started += instance.On_1;
                @_1.performed += instance.On_1;
                @_1.canceled += instance.On_1;
                @_2.started += instance.On_2;
                @_2.performed += instance.On_2;
                @_2.canceled += instance.On_2;
                @_3.started += instance.On_3;
                @_3.performed += instance.On_3;
                @_3.canceled += instance.On_3;
                @_4.started += instance.On_4;
                @_4.performed += instance.On_4;
                @_4.canceled += instance.On_4;
                @Awakestone.started += instance.OnAwakestone;
                @Awakestone.performed += instance.OnAwakestone;
                @Awakestone.canceled += instance.OnAwakestone;
            }
        }
    }
    public ElementalmenuActions @Elementalmenu => new ElementalmenuActions(this);

    // Equipmentmenu
    private readonly InputActionMap m_Equipmentmenu;
    private IEquipmentmenuActions m_EquipmentmenuActionsCallbackInterface;
    private readonly InputAction m_Equipmentmenu_Switchcharleft;
    private readonly InputAction m_Equipmentmenu_Switchcharright;
    private readonly InputAction m_Equipmentmenu_Upgradeitem;
    public struct EquipmentmenuActions
    {
        private @SpielerSteu m_Wrapper;
        public EquipmentmenuActions(@SpielerSteu wrapper) { m_Wrapper = wrapper; }
        public InputAction @Switchcharleft => m_Wrapper.m_Equipmentmenu_Switchcharleft;
        public InputAction @Switchcharright => m_Wrapper.m_Equipmentmenu_Switchcharright;
        public InputAction @Upgradeitem => m_Wrapper.m_Equipmentmenu_Upgradeitem;
        public InputActionMap Get() { return m_Wrapper.m_Equipmentmenu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(EquipmentmenuActions set) { return set.Get(); }
        public void SetCallbacks(IEquipmentmenuActions instance)
        {
            if (m_Wrapper.m_EquipmentmenuActionsCallbackInterface != null)
            {
                @Switchcharleft.started -= m_Wrapper.m_EquipmentmenuActionsCallbackInterface.OnSwitchcharleft;
                @Switchcharleft.performed -= m_Wrapper.m_EquipmentmenuActionsCallbackInterface.OnSwitchcharleft;
                @Switchcharleft.canceled -= m_Wrapper.m_EquipmentmenuActionsCallbackInterface.OnSwitchcharleft;
                @Switchcharright.started -= m_Wrapper.m_EquipmentmenuActionsCallbackInterface.OnSwitchcharright;
                @Switchcharright.performed -= m_Wrapper.m_EquipmentmenuActionsCallbackInterface.OnSwitchcharright;
                @Switchcharright.canceled -= m_Wrapper.m_EquipmentmenuActionsCallbackInterface.OnSwitchcharright;
                @Upgradeitem.started -= m_Wrapper.m_EquipmentmenuActionsCallbackInterface.OnUpgradeitem;
                @Upgradeitem.performed -= m_Wrapper.m_EquipmentmenuActionsCallbackInterface.OnUpgradeitem;
                @Upgradeitem.canceled -= m_Wrapper.m_EquipmentmenuActionsCallbackInterface.OnUpgradeitem;
            }
            m_Wrapper.m_EquipmentmenuActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Switchcharleft.started += instance.OnSwitchcharleft;
                @Switchcharleft.performed += instance.OnSwitchcharleft;
                @Switchcharleft.canceled += instance.OnSwitchcharleft;
                @Switchcharright.started += instance.OnSwitchcharright;
                @Switchcharright.performed += instance.OnSwitchcharright;
                @Switchcharright.canceled += instance.OnSwitchcharright;
                @Upgradeitem.started += instance.OnUpgradeitem;
                @Upgradeitem.performed += instance.OnUpgradeitem;
                @Upgradeitem.canceled += instance.OnUpgradeitem;
            }
        }
    }
    public EquipmentmenuActions @Equipmentmenu => new EquipmentmenuActions(this);

    // Startmenu
    private readonly InputActionMap m_Startmenu;
    private IStartmenuActions m_StartmenuActionsCallbackInterface;
    private readonly InputAction m_Startmenu_Up;
    private readonly InputAction m_Startmenu_Down;
    public struct StartmenuActions
    {
        private @SpielerSteu m_Wrapper;
        public StartmenuActions(@SpielerSteu wrapper) { m_Wrapper = wrapper; }
        public InputAction @Up => m_Wrapper.m_Startmenu_Up;
        public InputAction @Down => m_Wrapper.m_Startmenu_Down;
        public InputActionMap Get() { return m_Wrapper.m_Startmenu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(StartmenuActions set) { return set.Get(); }
        public void SetCallbacks(IStartmenuActions instance)
        {
            if (m_Wrapper.m_StartmenuActionsCallbackInterface != null)
            {
                @Up.started -= m_Wrapper.m_StartmenuActionsCallbackInterface.OnUp;
                @Up.performed -= m_Wrapper.m_StartmenuActionsCallbackInterface.OnUp;
                @Up.canceled -= m_Wrapper.m_StartmenuActionsCallbackInterface.OnUp;
                @Down.started -= m_Wrapper.m_StartmenuActionsCallbackInterface.OnDown;
                @Down.performed -= m_Wrapper.m_StartmenuActionsCallbackInterface.OnDown;
                @Down.canceled -= m_Wrapper.m_StartmenuActionsCallbackInterface.OnDown;
            }
            m_Wrapper.m_StartmenuActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Up.started += instance.OnUp;
                @Up.performed += instance.OnUp;
                @Up.canceled += instance.OnUp;
                @Down.started += instance.OnDown;
                @Down.performed += instance.OnDown;
                @Down.canceled += instance.OnDown;
            }
        }
    }
    public StartmenuActions @Startmenu => new StartmenuActions(this);
    public interface IPlayerActions
    {
        void OnMouse(InputAction.CallbackContext context);
        void OnMovement(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnAttack1(InputAction.CallbackContext context);
        void OnAttack2(InputAction.CallbackContext context);
        void OnAttack3(InputAction.CallbackContext context);
        void OnAttack4(InputAction.CallbackContext context);
        void OnWeaponchange(InputAction.CallbackContext context);
        void OnCharchange(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnAimLook(InputAction.CallbackContext context);
        void OnLockonchange(InputAction.CallbackContext context);
        void OnHeal(InputAction.CallbackContext context);
        void OnAbility1(InputAction.CallbackContext context);
        void OnAbility2(InputAction.CallbackContext context);
        void OnAbility3(InputAction.CallbackContext context);
        void OnAbility4(InputAction.CallbackContext context);
        void OnAbility56(InputAction.CallbackContext context);
        void OnSpezial(InputAction.CallbackContext context);
        void OnInteraction(InputAction.CallbackContext context);
        void OnMap(InputAction.CallbackContext context);
        void OnSetalliestarget(InputAction.CallbackContext context);
        void OnCharacter3target(InputAction.CallbackContext context);
        void OnCharacter4target(InputAction.CallbackContext context);
    }
    public interface IMenusteuerungActions
    {
        void OnLeftclick(InputAction.CallbackContext context);
        void OnRightclick(InputAction.CallbackContext context);
        void OnLoadgame(InputAction.CallbackContext context);
        void OnMenuesc(InputAction.CallbackContext context);
        void OnMenucharselectionleft(InputAction.CallbackContext context);
        void OnMenucharselectionright(InputAction.CallbackContext context);
        void OnSpace(InputAction.CallbackContext context);
        void OnF1(InputAction.CallbackContext context);
        void OnFps(InputAction.CallbackContext context);
        void OnSwitchmovespeed(InputAction.CallbackContext context);
        void OnUnlockfasttravel(InputAction.CallbackContext context);
    }
    public interface ISpielerHealActions
    {
        void OnTarget1(InputAction.CallbackContext context);
        void OnTarget2(InputAction.CallbackContext context);
        void OnTarget3(InputAction.CallbackContext context);
        void OnGroupheal(InputAction.CallbackContext context);
        void OnRandomhotkey1(InputAction.CallbackContext context);
        void OnRandomhotkey2(InputAction.CallbackContext context);
        void OnRandomhotkey3(InputAction.CallbackContext context);
        void OnRandomhotkey4(InputAction.CallbackContext context);
    }
    public interface IElementalmenuActions
    {
        void On_1(InputAction.CallbackContext context);
        void On_2(InputAction.CallbackContext context);
        void On_3(InputAction.CallbackContext context);
        void On_4(InputAction.CallbackContext context);
        void OnAwakestone(InputAction.CallbackContext context);
    }
    public interface IEquipmentmenuActions
    {
        void OnSwitchcharleft(InputAction.CallbackContext context);
        void OnSwitchcharright(InputAction.CallbackContext context);
        void OnUpgradeitem(InputAction.CallbackContext context);
    }
    public interface IStartmenuActions
    {
        void OnUp(InputAction.CallbackContext context);
        void OnDown(InputAction.CallbackContext context);
    }
}
